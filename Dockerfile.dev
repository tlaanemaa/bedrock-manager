FROM node:22-alpine

# Install system dependencies
RUN apk add --no-cache \
    docker-cli \
    zip \
    unzip \
    curl

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Create test directories and set up test data
RUN mkdir -p /app/test-data/servers \
    && mkdir -p /app/test-data/worlds \
    && mkdir -p /app/test-data/temp \
    && mkdir -p /app/test-worlds

# Set up basic test data structure
RUN mkdir -p /app/test-data/servers/testserver/worlds/test-world \
    && echo "Test World" > /app/test-data/servers/testserver/worlds/test-world/levelname.txt \
    && echo "[]" > /app/test-data/servers/testserver/worlds/test-world/world_behavior_packs.json \
    && echo "[]" > /app/test-data/servers/testserver/worlds/test-world/world_resource_packs.json

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Start in development mode (will be overridden by docker-compose)
CMD ["npm", "run", "dev"]
